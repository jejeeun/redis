package com.example.redis.cache;

import java.time.Duration;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.core.ValueOperations;
import org.springframework.stereotype.Component;

import lombok.RequiredArgsConstructor;

@Component
@RequiredArgsConstructor
public class RedisCache implements IRedis {
	
    private final RedisTemplate<String, Object> redisTemplate;
    
    private final int DEFAULT_TTL = 5;
    
	@Override
	public String get(String key) {
        ValueOperations<String, Object> values = redisTemplate.opsForValue();
        return (String) values.get(key);
	}
	@Override
	public void set(String key, String value) {
        ValueOperations<String, Object> values = redisTemplate.opsForValue();
        values.set(key, value, Duration.ofMinutes(DEFAULT_TTL)); // 5분 뒤 메모리에서 삭제된다.
		
	}
	@Override
	public void set(String key, String value, int ttl) {
        ValueOperations<String, Object> values = redisTemplate.opsForValue();
        values.set(key, value, Duration.ofMinutes(ttl)); //${ttl}분 뒤 메모리에서 삭제된다.
		
	}
	@Override
	public String clear(String key) {
		return redisTemplate.delete(key).toString();
	}
}
